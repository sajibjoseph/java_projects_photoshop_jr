#BlueJ class context
comment0.target=RUN_THIS_FILE
comment1.params=
comment1.target=RUN_THIS_FILE()
comment10.params=e
comment10.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment11.params=e
comment11.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment12.params=e
comment12.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment13.params=e
comment13.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment14.params=e
comment14.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment15.params=e
comment15.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment16.params=e
comment16.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment17.params=e
comment17.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment18.params=e
comment18.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment19.params=e
comment19.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment2.params=filename
comment2.target=void\ run(java.lang.String)
comment20.params=e
comment20.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment21.params=e
comment21.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment22.params=e
comment22.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment23.params=e
comment23.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment24.params=e
comment24.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment25.params=e
comment25.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment26.params=e
comment26.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment27.params=e
comment27.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment28.params=args
comment28.target=void\ main(java.lang.String[])
comment3.params=
comment3.target=void\ setupMenuFrame()
comment4.params=e
comment4.target=void\ windowClosing(java.awt.event.WindowEvent)
comment5.params=filename
comment5.target=void\ setupImageFrame(java.lang.String)
comment6.params=e
comment6.target=void\ windowClosing(java.awt.event.WindowEvent)
comment7.params=
comment7.target=void\ createButtons()
comment7.text=\r\n\ <b>HACK\ ALERT</b>\r\n\ <p>\r\n\ This\ is\ protected\ so\ that\ I\ can\ create\ a\ subclass\ that\ over-rides\ this\ method\r\n\ and\ creates\ all\ its\ own\ buttons\ that\ call\ down\ into\ a\ different\ \r\n\ class\ full\ of\ static\ filters.\r\n\ </p>\r\n\ <p>\r\n\ The\ sensible\ thing\ to\ do\ would\ have\ been\ to\ create\ an\ interface\ and\ have\r\n\ two\ implementations,\ and\ use\ dynamic\ classloading\ to\ create\ an\ instance\ in\ the\r\n\ driver\ program.\r\n\ </p>\r\n\ <p>\r\n\ But,\ at\ this\ point\ in\ the\ semester,\ the\ students\ just\ learned\ static\ methods\r\n\ and\ references,\ but\ haven't\ learned\ interfaces,\ so\ it\ makes\ the\ most\r\n\ sense\ to\ structure\ the\ program\ this\ way,\ even\ though\ it's\ a\ brittle\ design\ pattern.\r\n\ </p>\r\n
comment8.params=e
comment8.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment9.params=e
comment9.target=void\ actionPerformed(java.awt.event.ActionEvent)
numComments=29
